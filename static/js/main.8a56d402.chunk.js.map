{"version":3,"sources":["constants/constants.js","pages/main/radiobuttonfield.js","pages/main/weightentry.js","pages/main/homepage.js","theme/theme.js","App.js","serviceWorker.js","index.js"],"names":["UNITS","label","value","GENDER","LEVEL","CONSTANTS","female","sedentary","moderate","active","male","withStyles","theme","control","padding","marginRight","marginLeft","width","root","position","display","margin","paddingTop","formControl","group","props","classes","handleChange","className","Paper","Grid","container","spacing","item","xs","FormControl","component","FormLabel","RadioGroup","aria-label","name","units","onChange","map","option","index","FormControlLabel","key","Radio","gender","level","flexWrap","inputField","TextField","id","type","pattern","bodyWeight","fullWidth","variant","height","age","HomePage","event","target","setState","console","log","calculateScore","state","weight","Number","isNaN","stringScore","constants","bmr","Math","round","toString","totalCalories","this","classNames","sideMargin","Typography","align","color","Button","size","button","onClick","React","Component","minHeight","maxWidth","marginBottom","marginTop","logo","ico","transform","createMuiTheme","palette","primary","main","secondary","error","red","contrastThreshold","tonalOffset","typography","useNextVariants","Wrapper","styled","div","App","MuiThemeProvider","Boolean","window","location","hostname","match","render","document","getElementById","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8a56d402.chunk.js","sourcesContent":["/**\n * the \"label\" is how the radio button labels will display\n */\n\nconst UNITS = [\n    {\n        label: 'kg',\n        value: 'kilos',\n      },\n      {\n        label: 'lbs',\n        value: 'pounds'\n      },\n];\nconst GENDER = [\n  {\n    label: 'Female',\n    value: 'female',\n  },\n  {\n    label: 'Male',\n    value: 'male'\n  },\n];\nconst LEVEL = [\n  {\n    label:  'Sedentary',\n    value: 'sedentary'\n  },\n  {\n    label: 'Moderate',\n    value: 'moderate',\n  },\n  {\n      label: 'Active',\n      value: 'active'\n  }\n];\n\nconst CONSTANTS = {\n    female: {\n        sedentary: [537.112, 11.096, 3.718, 5.196],\n\n        moderate: [693.769, 14.333, 4.802, 6.712],\n\n        active: [850.427, 17.569, 5.886, 8.227]\n    },\n    male: {\n        sedentary: [106.034, 16.076, 5.759, 6.812],\n\n        moderate: [136.961, 20.765, 7.438, 8.799],\n\n        active: [167.888, 25.454, 9.118, 10.786]\n    }\n        \n};\n\n\nexport {\n    UNITS,\n    GENDER,\n    LEVEL,\n    CONSTANTS,\n}","\nimport React from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nimport { UNITS, GENDER, LEVEL } from '../../constants/constants'\n\nconst styles = (theme) => ({\n  control: {\n    padding: '1em',\n    marginRight: '1.5em',\n    marginLeft: '1.5em',\n    width: '100%'\n  },\n  root: {\n    position: 'relative',\n    display: 'flex',\n    margin: '0 auto',\n    paddingTop: '0.5em',\n    width: '100%'\n  },\n  formControl: {\n\n  },\n  group: {\n    margin: 'auto',\n  },\n});\n\n  \n\nfunction RadioButtonField (props) {\n    /*\n    * constants will be dictated by the radio button component\n    */\n\n    const { classes, handleChange } = props;\n\n    return (\n    <div className={classes.root}>\n        <Paper className={classes.control}>\n        <Grid container spacing={5}>\n\n            <Grid item xs={6}>\n            <FormControl component=\"fieldset\">\n                <FormLabel component=\"legend\">Units</FormLabel>\n                <RadioGroup\n                aria-label=\"Units\"\n                name=\"units\"\n                value={props.units}\n                onChange={handleChange}>\n                {UNITS.map((option, index) => (\n                    <FormControlLabel\n                    key={'mykey' + index}\n                    value={option.value}\n                    control={<Radio />}\n                    label={option.label}\n                    />\n                ))}\n                </RadioGroup>\n            </FormControl>\n            </Grid>\n\n            <Grid item xs={6}>\n            <FormControl component=\"fieldset\" className={classes.formControl}>\n                <FormLabel component=\"legend\">Gender</FormLabel>\n                <RadioGroup\n                aria-label=\"Gender\"\n                name=\"gender\"\n                className={classes.group}\n                value={props.gender}\n                onChange={handleChange}\n                >\n                {GENDER.map((option, index) => (\n                    <FormControlLabel\n                    key={'mykey' + index}\n                    value={option.value} \n                    control={<Radio />}\n                    label={option.label}\n                    />\n                ))}\n                </RadioGroup>\n            </FormControl>\n            </Grid>\n\n            <Grid item xs={6}>\n            <FormControl component=\"fieldset\" className={classes.formControl}>\n                <FormLabel component=\"legend\">Exercise Level</FormLabel>\n                <RadioGroup\n                aria-label=\"Level\"\n                name=\"level\"\n                className={classes.group}\n                value={props.level}\n                onChange={handleChange}\n                >\n                {LEVEL.map((option, index) => (\n                    <FormControlLabel\n                    key={'mykey' + index}\n                    value={option.value}\n                    control={<Radio />}\n                    label={option.label}\n                    />\n                ))}\n                </RadioGroup>\n            </FormControl>\n            </Grid>\n\n        </Grid>\n        </Paper>    \n    </div>\n    );\n}\n\nexport default withStyles(styles)(RadioButtonField);","import React from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport TextField from '@material-ui/core/TextField';\n\n\nconst styles = (theme) => ({\n  root: {\n    position: 'relative',\n    display: 'flex',\n    margin: '0 auto',\n    paddingTop: '0.5em',\n    flexWrap: 'wrap',\n    marginRight: '1.5em',\n    marginLeft: '1.5em',\n  },\n  inputField: {\n    display: 'flex',\n    width: '100%'\n  },\n});\n\n  \n\nfunction WeightEntry (props) {\n\n    const { classes, handleChange } = props;\n\n    return (\n\n        /**\n         * these allow you to create input fields\n         */\n        <div className={classes.root}>\n\n            <div className={classes.inputField}>\n                <TextField\n                id=\"outlined-dense\"\n                label=\"Body Weight\"\n                name=\"bodyWeight\"\n                type=\"tel\"\n                pattern=\"[0-9]*\"\n                value={props.bodyWeight}\n                onChange={handleChange}\n                fullWidth\n                margin=\"dense\"\n                variant=\"outlined\" />\n            </div>\n\n            <div className={classes.inputField}>\n                <TextField\n                id=\"outlined-dense\"\n                label=\"Height\"\n                name=\"height\"\n                type=\"tel\"\n                pattern=\"[0-9]*\"\n                value={props.height}\n                onChange={handleChange}\n                fullWidth\n                margin=\"dense\"\n                variant=\"outlined\" />\n            </div>\n\n            <div className={classes.inputField}>\n                <TextField\n                id=\"outlined-dense\"\n                label=\"Age\"\n                name=\"age\"\n                type=\"tel\"\n                pattern=\"[0-9]*\"\n                value={props.age}\n                onChange={handleChange}\n                fullWidth\n                margin=\"dense\"\n                variant=\"outlined\" />\n            </div>\n\n        </div>\n    );\n}\n\nexport default withStyles(styles)(WeightEntry);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/styles';\nimport Button from '@material-ui/core/Button';\nimport classNames from 'classnames';\nimport { Paper, Typography } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\n\nimport RadioButtonField from './radiobuttonfield';\nimport WeightEntry from './weightentry';\nimport {CONSTANTS} from '../../constants/constants';\n\n\nconst styles = (theme) => ({\n  control: {\n    padding: '1em',\n    minHeight: '5em',\n  },\n  root: {\n    //background: '#A2A392',\n    paddingTop: '1em',\n    display: 'flex',\n    margin: '0 auto',\n    flexWrap: 'wrap',\n    maxWidth: '400px',\n    marginBottom: '1em'\n  },\n  group: {\n    margin: 'auto',\n  },\n  button: {\n    marginTop: '.75em',\n  },\n  logo: {\n    marginTop: '2.5em',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginBottom: '.5em',\n    width: '75px'\n  },\n  width: {\n    width: '100%',\n  },\n  sideMargin: {\n    marginLeft: '1.5em',\n    marginRight: '1.5em',\n  },\n  ico: {\n    transform: 'scale(1.75)',\n  }\n});\n\nclass HomePage extends React.Component {\n  /*\n  this can be defaulted to have the radio button 'lit'\n  */\n  constructor (props) {\n    super(props);\n    this.state = { \n      gender: '',\n      level: '',\n      bodyWeight: '',\n      height: '',\n      units: '',\n      totalCalories: '0'\n    }\n  };\n\n  handleChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value,\n    });\n    console.log(name, value);\n    console.log(typeof value);\n\n  };\n\n  calculateScore = () => {\n\n    if (this.state.weight === '') return;\n\n    var weight = Number(this.state.bodyWeight);\n    var height = Number(this.state.height);\n    var age = Number(this.state.age);\n\n    /* Check inputs to make sure they are valid */\n    if (isNaN(weight)) return;\n\n    /* Both calculations need to be done in kg, so we convert*/\n    if (this.state.units === 'pounds') {\n      weight = this.state.bodyWeight * 0.453592;\n    };\n\n    /**\n     * BMR Calories\n     */\n    var constants = CONSTANTS[this.state.gender][this.state.level];\n    var bmr = constants[0] + (constants[1] * weight) + (constants[2] * height) - (constants[3] * age);\n\n    bmr = Math.round(bmr*100)/100;\n    let stringScore;\n    if (bmr > 3900){\n        stringScore = \"u sure?\";\n      }\n      else if (isNaN(bmr) || bmr < 0){\n        stringScore = \"0.05\";\n      } else {\n        stringScore = bmr.toString();\n      }\n\n\n    this.setState({\n      totalCalories: stringScore\n    })\n};\n\n  render() {\n\n    const { classes } = this.props;\n\n    return (\n      //here we control the displaying of our calculations\n\n      <div className={classes.root}>\n\n      \n        <Paper\n        className={classNames(classes.control, classes.sideMargin, classes.width)}>\n         <Grid container spacing={24}>\n        \n          <Grid item xs={12}>\n            <Typography align=\"center\" variant=\"h6\" color=\"secondary\">\n              {\"Total Calories:\"}\n            </Typography>\n            <Typography align=\"center\" variant=\"h4\" color=\"primary\">\n              {this.state.totalCalories}\n            </Typography>\n          </Grid>\n\n          </Grid>\n      \n        </Paper>\n\n        <RadioButtonField\n        handleChange={this.handleChange}\n        gender={this.state.gender}\n        level={this.state.level}\n        units={this.state.units} />\n\n        <WeightEntry\n        handleChange={this.handleChange}\n        bodyWeight={this.state.bodyWeight}\n        height={this.state.height}\n        age={this.state.age} />\n\n        <Button variant=\"contained\"\n        size=\"large\"\n        color=\"primary\"\n        className={classNames(classes.button, classes.sideMargin, classes.width)}\n        onClick={()=>{\n          this.calculateScore();\n          }} >\n          Calculate\n        </Button>\n\n      </div>\n    )\n  }\n}\n\nHomePage.propTypes = {\n  handleChange: PropTypes.func,\n  calculateScore: PropTypes.func,\n};\n\nexport default withStyles(styles)(HomePage);","import {createMuiTheme } from '@material-ui/core/styles';\nimport red from '@material-ui/core/colors/red';\n\n\nexport const theme = createMuiTheme({\n  palette: {\n    primary: {main: '#AB3428'},\n    secondary: {main: \"#F49E4C\"},\n    error: red,\n    // Used by `getContrastText()` to maximize the contrast between the background and\n    // the text.\n    contrastThreshold: 3,\n    // Used to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset: 0.2,\n  },\n  typography: {\n    useNextVariants: true,\n  },\n});","import React, { Component } from 'react';\n//import ButtonAppBar from './components/Navbar';\nimport HomePage from './pages/main/homepage';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport { theme } from './theme/theme';\nimport styled from 'styled-components';\n\n\n//in this file, we can add a navigation bar if needed, just import above\nconst Wrapper = styled.div`\n  margin: 0 auto;\n  display: flex;\n  min-height: 100%;\n  padding: 0 0px;\n  flex-direction: column;\n`;\n\n//under homepage, could add nav bar\nclass App extends Component {\n  render() {\n    return (\n      <div id=\"app\">\n        <Wrapper>\n          <MuiThemeProvider theme={theme}>\n            <HomePage/>\n          </MuiThemeProvider>\n        </Wrapper>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport {render } from 'react-dom' \nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nrender(<App />, document.getElementById('root'))\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}