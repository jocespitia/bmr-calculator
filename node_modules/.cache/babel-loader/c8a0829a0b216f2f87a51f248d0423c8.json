{"ast":null,"code":"var _jsxFileName = \"/Users/joce/macro-me/src/pages/main/homepage.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/styles';\nimport Button from '@material-ui/core/Button';\nimport classNames from 'classnames';\nimport { Paper, Typography } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport RadioButtonField from './radiobuttonfield';\nimport WeightEntry from './weightentry';\nimport { CONSTANTS } from '../../constants/constants';\nimport { FIT_GOALS } from \"../../constants/constants\";\n\nconst styles = theme => ({\n  control: {\n    padding: '1em',\n    minHeight: '5em'\n  },\n  root: {\n    //background: '#A2A392',\n    paddingTop: '1em',\n    display: 'flex',\n    margin: '0 auto',\n    flexWrap: 'wrap',\n    maxWidth: '400px',\n    marginBottom: '1em'\n  },\n  group: {\n    margin: 'auto'\n  },\n  button: {\n    marginTop: '.75em'\n  },\n  logo: {\n    marginTop: '2.5em',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginBottom: '.5em',\n    width: '75px'\n  },\n  width: {\n    width: '100%'\n  },\n  sideMargin: {\n    marginLeft: '1.5em',\n    marginRight: '1.5em'\n  },\n  ico: {\n    transform: 'scale(1.75)'\n  }\n});\n\nclass HomePage extends React.Component {\n  /*\n  this can be defaulted to have the radio button 'lit'\n  */\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const target = event.target;\n      const value = target.value;\n      const name = target.name;\n      this.setState({\n        [name]: value\n      });\n      console.log(name, value);\n      console.log(typeof value);\n    };\n\n    this.calculateScore = () => {\n      if (this.state.weight === '') return;\n      var weight = Number(this.state.bodyWeight);\n      var height = Number(this.state.height);\n      var age = Number(this.state.age);\n      var total = Number(this.state.total);\n      /* Check inputs to make sure they are valid */\n\n      if (isNaN(weight)) return;\n      /* Both calculations need to be done in kg, so we convert*/\n\n      if (this.state.units === 'pounds') {\n        weight = this.state.bodyWeight * 0.453592;\n        total = this.state.total * 0.453592;\n      }\n\n      ;\n      /**\n       * BMR Calories\n       */\n\n      var constants = CONSTANTS[this.state.gender][this.state.level];\n      var bmr = constants[0] + constants[1] * Math.log(weight) + constants[2] * Math.log(height) - constants[3] * age;\n      /**\n       * Total Calories\n       \n      var C = FIT_GOALS[this.state.goal];\n      var fewerCalories = bmr * C[0];\n      var calories2Lose = bmr - fewerCalories;\n      var calories2Gain = bmr + C[1];\n      var calories2Maintain = bmr + C[2];\n      */\n\n      bmr = Math.round(bmr * 100) / 100;\n      let stringScore;\n\n      if (bmr > 3900) {\n        stringScore = \"u sure?\";\n      } else if (isNaN(bmr) || bmr < 0) {\n        stringScore = \"0.05\";\n      } else {\n        stringScore = bmr.toString();\n      }\n\n      this.setState({\n        totalCalories: stringScore\n      });\n    };\n\n    this.state = {\n      gender: '',\n      level: '',\n      goal: '',\n      bodyWeight: '',\n      height: '',\n      units: '',\n      fats: '0.0',\n      carbs: '0.0',\n      protein: '0.0',\n      totalCalories: '0'\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return (//here we control the displaying of our calculations\n      React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        className: classNames(classes.control, classes.sideMargin, classes.width),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        align: \"center\",\n        variant: \"h6\",\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"Total Calories:\"), React.createElement(Typography, {\n        align: \"center\",\n        variant: \"h4\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, this.state.totalCalories)), React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        align: \"center\",\n        variant: \"h6\",\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"Carbs:\"), React.createElement(Typography, {\n        align: \"center\",\n        variant: \"h4\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, this.state.carbs)), React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        align: \"center\",\n        variant: \"h6\",\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"Protein:\"), React.createElement(Typography, {\n        align: \"center\",\n        variant: \"h4\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, this.state.protein)), React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        align: \"center\",\n        variant: \"h6\",\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \"Fats:\"), React.createElement(Typography, {\n        align: \"center\",\n        variant: \"h4\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, this.state.fats)))), React.createElement(WeightEntry, {\n        handleChange: this.handleChange,\n        bodyWeight: this.state.bodyWeight,\n        height: this.state.height,\n        age: this.state.age,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }), React.createElement(RadioButtonField, {\n        handleChange: this.handleChange,\n        gender: this.state.gender,\n        level: this.state.level,\n        goal: this.state.goal,\n        units: this.state.units,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"contained\",\n        size: \"large\",\n        color: \"primary\",\n        className: classNames(classes.button, classes.sideMargin, classes.width),\n        onClick: () => {\n          this.calculateScore();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \"Calculate\"))\n    );\n  }\n\n}\n\nHomePage.propTypes = {\n  handleChange: PropTypes.func,\n  calculateScore: PropTypes.func\n};\nexport default withStyles(styles)(HomePage);","map":{"version":3,"sources":["/Users/joce/macro-me/src/pages/main/homepage.js"],"names":["React","PropTypes","withStyles","Button","classNames","Paper","Typography","Grid","RadioButtonField","WeightEntry","CONSTANTS","FIT_GOALS","styles","theme","control","padding","minHeight","root","paddingTop","display","margin","flexWrap","maxWidth","marginBottom","group","button","marginTop","logo","marginLeft","marginRight","width","sideMargin","ico","transform","HomePage","Component","constructor","props","handleChange","event","target","value","name","setState","console","log","calculateScore","state","weight","Number","bodyWeight","height","age","total","isNaN","units","constants","gender","level","bmr","Math","round","stringScore","toString","totalCalories","goal","fats","carbs","protein","render","classes","propTypes","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/styles';\nimport Button from '@material-ui/core/Button';\nimport classNames from 'classnames';\nimport { Paper, Typography } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\n\nimport RadioButtonField from './radiobuttonfield';\nimport WeightEntry from './weightentry';\nimport {CONSTANTS} from '../../constants/constants';\nimport {FIT_GOALS} from \"../../constants/constants\";\n\n\n\nconst styles = (theme) => ({\n  control: {\n    padding: '1em',\n    minHeight: '5em',\n  },\n  root: {\n    //background: '#A2A392',\n    paddingTop: '1em',\n    display: 'flex',\n    margin: '0 auto',\n    flexWrap: 'wrap',\n    maxWidth: '400px',\n    marginBottom: '1em'\n  },\n  group: {\n    margin: 'auto',\n  },\n  button: {\n    marginTop: '.75em',\n  },\n  logo: {\n    marginTop: '2.5em',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginBottom: '.5em',\n    width: '75px'\n  },\n  width: {\n    width: '100%',\n  },\n  sideMargin: {\n    marginLeft: '1.5em',\n    marginRight: '1.5em',\n  },\n  ico: {\n    transform: 'scale(1.75)',\n  }\n});\n\nclass HomePage extends React.Component {\n  /*\n  this can be defaulted to have the radio button 'lit'\n  */\n  constructor (props) {\n    super(props);\n    this.state = { \n      gender: '',\n      level: '',\n      goal: '',\n      bodyWeight: '',\n      height: '',\n      units: '',\n      fats: '0.0',\n      carbs: '0.0',\n      protein: '0.0',\n      totalCalories: '0'\n    }\n  };\n\n  handleChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value,\n    });\n    console.log(name, value);\n    console.log(typeof value);\n\n  };\n\n  calculateScore = () => {\n\n    if (this.state.weight === '') return;\n\n    var weight = Number(this.state.bodyWeight);\n    var height = Number(this.state.height);\n    var age = Number(this.state.age);\n    var total = Number(this.state.total);\n\n    /* Check inputs to make sure they are valid */\n    if (isNaN(weight)) return;\n\n    /* Both calculations need to be done in kg, so we convert*/\n    if (this.state.units === 'pounds') {\n      weight = this.state.bodyWeight * 0.453592;\n      total = this.state.total * 0.453592;\n    };\n\n    /**\n     * BMR Calories\n     */\n    var constants = CONSTANTS[this.state.gender][this.state.level];\n    var bmr = constants[0] + (constants[1] * Math.log(weight)) + (constants[2] * Math.log(height)) - (constants[3] * age);\n    \n\n    /**\n     * Total Calories\n     \n    var C = FIT_GOALS[this.state.goal];\n    var fewerCalories = bmr * C[0];\n    var calories2Lose = bmr - fewerCalories;\n    var calories2Gain = bmr + C[1];\n    var calories2Maintain = bmr + C[2];\n    */\n\n  bmr = Math.round(bmr*100)/100;\n  let stringScore;\n  if (bmr > 3900){\n      stringScore = \"u sure?\";\n    }\n    else if (isNaN(bmr) || bmr < 0){\n      stringScore = \"0.05\";\n    } else {\n      stringScore = bmr.toString();\n    }\n\n\n  this.setState({\n    totalCalories: stringScore\n  })\n};\n\n  render() {\n\n    const { classes } = this.props;\n\n    return (\n      //here we control the displaying of our calculations\n\n      <div className={classes.root}>\n\n      \n        <Paper\n        className={classNames(classes.control, classes.sideMargin, classes.width)}>\n         <Grid container spacing={24}>\n        \n          <Grid item xs={6}>\n            <Typography align=\"center\" variant=\"h6\" color=\"secondary\">\n              {\"Total Calories:\"}\n            </Typography>\n            <Typography align=\"center\" variant=\"h4\" color=\"primary\">\n              {this.state.totalCalories}\n            </Typography>\n          </Grid>\n\n          <Grid item xs={6}>\n            <Typography align=\"center\" variant=\"h6\" color=\"secondary\">\n              {\"Carbs:\"}\n            </Typography>\n            <Typography align=\"center\" variant=\"h4\" color=\"primary\">\n              {this.state.carbs}\n            </Typography>\n          </Grid>\n\n          <Grid item xs={6}>\n            <Typography align=\"center\" variant=\"h6\" color=\"secondary\">\n              {\"Protein:\"}\n            </Typography>\n            <Typography align=\"center\" variant=\"h4\" color=\"primary\">\n              {this.state.protein}\n            </Typography>\n          </Grid>\n\n          <Grid item xs={6}>\n            <Typography align=\"center\" variant=\"h6\" color=\"secondary\">\n              {\"Fats:\"}\n            </Typography>\n            <Typography align=\"center\" variant=\"h4\" color=\"primary\">\n              {this.state.fats}\n            </Typography>\n          </Grid>\n\n          </Grid>\n      \n        </Paper>\n\n        <WeightEntry\n        handleChange={this.handleChange}\n        bodyWeight={this.state.bodyWeight}\n        height={this.state.height}\n        age={this.state.age} />\n\n        <RadioButtonField\n        handleChange={this.handleChange}\n        gender={this.state.gender}\n        level={this.state.level}\n        goal={this.state.goal}\n        units={this.state.units} />\n\n        <Button variant=\"contained\"\n        size=\"large\"\n        color=\"primary\"\n        className={classNames(classes.button, classes.sideMargin, classes.width)}\n        onClick={()=>{\n          this.calculateScore();\n          }} >\n          Calculate\n        </Button>\n\n      </div>\n    )\n  }\n}\n\nHomePage.propTypes = {\n  handleChange: PropTypes.func,\n  calculateScore: PropTypes.func,\n};\n\nexport default withStyles(styles)(HomePage);"]},"metadata":{},"sourceType":"module"}